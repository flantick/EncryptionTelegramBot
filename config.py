TOKEN = ''  # enter your token

WELLCOMEMESSAGE = 'Впервые тут?\n' \
                  'Чтобы ознакомится с ботом напиши - /help'

HELP = 'Вот лови набор команд - это должно тебе помочь разобраться\n' \
                  '/aesen - Зашифровать с помощью aes\n' \
                  '/gosten - Зашифровать с помощью ГОСТ 34.12-2018\n' \
                  '/hash - Хэширование\n' \
                  '/aesde - Расшифровать с помощью aes\n' \
                  '/gostde - Расшифровать с помощью ГОСТ 34.12-2018\n' \
                  '/mksign - сформировать электронную цифровую подпись\n' \
                  '/vrfsign - проверить электронную цифровую подпись\n' \
       '===============================\n' \
       'Чтобы подробнее ознакомится с командами напиши следующее\n' \
       '/help_aes - узнать про aes \n' \
       '/help_gost - узнать про gost \n' \
       '/help_hash - узнать про hash \n' \
       '/help_sign - узнать про sign \n'

HELPAES = 'AES - криптостойкий симметричный алгоритм блочного шифрования\n' \
             'Подробнее в тексте документа - https://nvlpubs.nist.gov/nistpubs/FIPS/NIST.FIPS.197.pdf\n' \
'===============================\n' \
             'Пример зашифровывания\n' \
             '/aesen (ключ в круглых скобках) "здесь важно перейти на следующую строчку"\n' \
            '[этот текст будет зашифрован - в квадратных скобках]\n' \
'===============================\n' \
             'Пример расшифровывания\n' \
             '/aesde (ключ в круглых скобках) "здесь важно перейти на следующую строчку" \n' \
            '[gAAAAABhO0d6OeOpnEhHKu_TVVmYgSC9u_CHxmfzk1S0I0JjerPo2ibF9zVkkOb4q_kBYqPgABc0vHi0BxBuKUobxf1QAfONpQ_kFPYO_7VgfoPtSgMvHF8SEp5gLTvnYrcH5m7biaPzRNmrWXDEp4pflp-cOxC8V1jUe3aq_eYXzszwsccaGS5xSBUmL0tfSoCxtnd9gMF3]'

GOSTHELP = 'ГОСТ 34.12-2018 криптостойкий симметричный блочный шифр с 256-битным ключом и 32 циклами преобразования, оперирующий 64-битными блоками\n' \
           'Подробнее в тексте документа - http://docs.cntd.ru/document/gost-28147-89\n' \
'===============================\n' \
           'Пример зашифровывания\n' \
           '/gosten (ключ в круглых скобках) "здесь важно перейти на следующую строчку"\n' \
           '[этот текст будет зашифрован - в квадратных скобках]\n' \
'===============================\n' \
           'Пример расшифровывания\n' \
           '/gostde (ключ в круглых скобках) "здесь важно перейти на следующую строчку"\n' \
           '[0000000000000000ae57dcee12c527e68c496577d04fc59324c44488595d7bbf65c8671257f5ec29a023e6d7d8b777f6a00188a77360b9bd433bcd9fb92b95638fd8f6a23dabd9d8dfcb540e24247b33472a3c2763e2bb72a56008f9bce132c86cf9b5e3afd5e0ec]'

HASHHELP = 'Хеш-функция — функция, осуществляющая преобразование массива входных данных произвольной длины в (выходную) битовую строку установленной длины\n' \
           'На нашем боте реализованы следующие алгоритмы свертывания - sha1, sha256, sha512, md5, ГОСТ 34.11-2018(gost512, gost256) \n' \
           'Подробнее по ссылкам ниже\n' \
           'sha1 - https://ru.wikipedia.org/wiki/SHA-1\n' \
           'sha256, sha512 - https://ru.wikipedia.org/wiki/SHA-2\n' \
           'md5 - https://ru.wikipedia.org/wiki/MD5\n' \
           'ГОСТ 34.11-2018 - https://docs.cntd.ru/document/1200161707 \n' \
'===============================\n' \
           'Пример свертывания\n' \
           '/hash (md5) "здесь важно перейти на следующую строчку"\n' \
           '[этот текст будет хэширован]'

HELPSIGN = 'ГОСТ 34.10-2018 -  действующий межгосударственный криптографический стандарт, описывающий алгоритмы формирования и проверки электронной цифровой подписи реализуемой с использованием операций в группе точек эллиптической кривой  \n' \
           'Подробнее в тексте документа - https://docs.cntd.ru/document/1200161706  \n' \
'===============================\n' \
           'Пример формирования\n' \
           '/mksign (секретный ключ) "здесь важно перейти на следующую строчку"\n' \
           '[этот текст будет зашифрован]\n'  \
'===============================\n' \
           'Пример проверки\n' \
           '/vrfsign (11084331005920272738002924377282183054471809002759055291950542225758371327129:63869738057900090063525930438404014006196807260287243084544146712556567056706) здесь важно разделить обе части публичного ключа двоеточием (:) и перейти на следующую строчку\n' \
           '{bb67e692781fce9606511afcff780135df3953cfc42d4359158dc7d082205a202a30c37e069eeea148828dcd49d9904a54ad193ac563b691aa6dbeee32510a53} "здесь важно перейти на следующую строчку"\n' \
           '[этот текст будет зашифрован]'
